#
# http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PropertyConfigurator.html
#
# <!--
#      This AsyncCoalescingStatisticsAppender groups StopWatch log messages
#      into GroupedTimingStatistics messages which it sends on the
#      file appender defined below
#    -->
#    <appender name="CoalescingStatistics"
#              class="org.perf4j.log4j.AsyncCoalescingStatisticsAppender">
#        <!--
#          The TimeSlice option is used to determine the time window for which
#          all received StopWatch logs are aggregated to create a single
#          GroupedTimingStatistics log. Here we set it to 10 seconds, overriding
#          the default of 30000 ms
#        -->
#        <param name="TimeSlice" value="10000"/>
#        <appender-ref ref="fileAppender"/>
#        <appender-ref ref="graphExecutionTimes"/>
#        <appender-ref ref="graphExecutionTPS"/>
#        <!-- We add the JMX Appender reference onto the CoalescingStatistics -->
#        <appender-ref ref="perf4jJmxAppender"/>
#    </appender>

log4j.appender.CoalescingStatistics=org.perf4j.log4j.AsyncCoalescingStatisticsAppender
log4j.appender.CoalescingStatistics.TimeSlice=10000
log4j.appender.CoalescingStatistics.appender-ref=graphExecutionTimes
log4j.appender.CoalescingStatistics.appender-ref=graphExecutionTPS

# log4j.appender.CoalescingStatistics.appender-ref=perf4jJmxAppender

#    <!--
#      This first GraphingStatisticsAppender graphs Mean execution times for the
#      firstBlock and secondBlock tags
#    -->
#    <appender name="graphExecutionTimes"
#              class="org.perf4j.log4j.GraphingStatisticsAppender">
#        <!-- Possible GraphTypes are Mean, Min, Max, StdDev, Count and TPS -->
#        <param name="GraphType" value="Mean"/>
#        <!-- The tags of the timed execution blocks to graph are specified here -->
#        <param name="TagNamesToGraph" value="firstBlock,secondBlock"/>
#        <appender-ref ref="graphsFileAppender"/>
#    </appender>

log4j.appender.graphExecutionTimes=org.perf4j.log4j.GraphingStatisticsAppender
log4j.appender.graphExecutionTimes.GraphType=Mean
# firstBlock,secondBlock
log4j.appender.graphExecutionTimes.TagNamesToGraph=/api/solr/transactions,/api/solr/modelsdiff,/api/solr/aclchangesets
log4j.appender.graphExecutionTimes.appender-ref=graphsFileAppender

#    <!--
#      This second GraphingStatisticsAppender graphs transactions per second
#      for the firstBlock and secondBlock tags
#    -->
#    <appender name="graphExecutionTPS"
#              class="org.perf4j.log4j.GraphingStatisticsAppender">
#        <param name="GraphType" value="TPS"/>
#        <param name="TagNamesToGraph" value="firstBlock,secondBlock"/>
#        <appender-ref ref="graphsFileAppender"/>
#    </appender>

log4j.appender.graphExecutionTPS=org.perf4j.log4j.GraphingStatisticsAppender
log4j.appender.graphExecutionTPS.GraphType=TPS
log4j.appender.graphExecutionTPS.TagNamesToGraph=/api/solr/transactions,/api/solr/modelsdiff,/api/solr/aclchangesets
# firstBlock,secondBlock
log4j.appender.graphExecutionTPS.appender-ref=graphsFileAppender

#    <!--
#      This file appender is used to output the graph URLs generated
#      by the GraphingStatisticsAppenders
#    -->
#    <appender name="graphsFileAppender" class="org.apache.log4j.FileAppender">
#        <param name="File" value="perfGraphs.log"/>
#        <layout class="org.apache.log4j.PatternLayout">
#            <param name="ConversionPattern" value="%m%n"/>
#        </layout>
#    </appender>

log4j.appender.graphsFileAppender=org.apache.log4j.FileAppender
log4j.appender.graphsFileAppender.File=${catalina.home}/logs/alfresco-perf4j.log
log4j.appender.graphsFileAppender.TagNamesToGraph=firstBlock,secondBlock
log4j.appender.graphsFileAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.graphsFileAppender.layout.ConversionPattern=%m%n

#    <!--
#      This JMX appender creates an MBean and publishes it to the platform MBean server by
#      default.
#    -->
#    <appender name="perf4jJmxAppender" class="org.perf4j.log4j.JmxAttributeStatisticsAppender">
#        <!--
#          You must specify the tag names whose statistics should be exposed as
#          MBean attributes.
#        -->
#        <param name="TagNamesToExpose" value="firstBlock,secondBlock"/>
#        <!--
#          The NotificationThresholds param configures the sending of JMX notifications
#          when statistic values exceed specified thresholds. This config states that
#          the firstBlock max value should be between 0 and 800ms, and the secondBlock max
#          value should be less than 1500 ms. You can also set thresholds on the Min,
#          Mean, StdDev, Count and TPS statistics - e.g. firstBlockMean(<600).
#        -->
#        <param name="NotificationThresholds" value="firstBlockMax(0-800),secondBlockMax(&lt;1500)"/>
#        <!--
#          You can also specify an optional MBeanName param, which overrides
#          the default MBean name of org.perf4j:type=StatisticsExposingMBean,name=Perf4J
#        -->
#    </appender>

# log4j.appender.perf4jJmxAppender=org.perf4j.log4j.JmxAttributeStatisticsAppender
# log4j.appender.perf4jJmxAppender.TagNamesToExpose=firstBlock,secondBlock

# log4j.appender.perf4jJmxAppender.NotificationThresholds=firstBlockMax(0-800),secondBlockMax(&lt;1500)

#    <!-- Loggers -->
#    <!--
#      The Perf4J logger. Note that org.perf4j.TimingLogger is the value of the
#      org.perf4j.StopWatch.DEFAULT_LOGGER_NAME constant. Also, note that
#      additivity is set to false, which is usually what is desired - this means
#      that timing statements will only be sent to this logger and NOT to
#      upstream loggers.
#    -->
#    <logger name="org.perf4j.TimingLogger" additivity="false">
#        <level value="INFO"/>
#        <appender-ref ref="CoalescingStatistics"/>
#    </logger>

log4j.logger.org.perf4j.TimingLogger=info,CoalescingStatistics
log4j.additivity.org.perf4j.TimingLoggers=false
